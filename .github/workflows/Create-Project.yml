name: Build the app


on:
  watch:
    types: [started]



jobs:
  build:
    name: Build the app
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    
    - run: npm install
    
    - name: Log to tg
      env:
        chat_id: ${{ secrets.CHAT_ID }}
        bot_token: ${{ secrets.TG_TOKEN }}
      run: |
        curl -d chat_id=${chat_id} -d text="Build has Started..." https://api.telegram.org/bot${bot_token}/sendMessage

    
    - name: Update package list
      run: sudo apt update
    
    - name: Install gradle
      run: sudo apt install gradle
    
    - name: Install jq
      run: sudo apt install jq
      
    - name: Save revision and branch
      run: |
        echo "::set-env name=SHORT_REV::$(git rev-parse --short HEAD)"
        echo "::set-env name=LONG_REV::$(git rev-parse HEAD)"
        echo "::set-env name=BRANCH::$(sed 's/-/_/g' <<< `git rev-parse --abbrev-ref HEAD`)"
        
    - name: Install cordova
      run: |
        sudo npm config set unsafe-perm true && \
        sudo npm install -g cordova
    
    - name: Setup build type
      run: echo "::set-env name=BUILD_TYPE::release"
      env:
        BUILD_TYPE: release
        
        
    - name: Create Project
      run: cordova create werm com.cypherpunkarmoury.werm werm

    - name: Add Platform
      run: (cd werm; cordova platform add android)

    - name: Zip Current Folder for Bkp
      run: (cd werm; cordova plugin add https://github.com/CypherpunkArmoury/cordova-werm.git)
      
      
    - name: Zip Current Folder for Bkp
      run: (cd werm; zip -r ../CodeBackup.zip *)
      

    - name: Upload to TG
      env:
        chat_id: ${{ secrets.CHAT_ID }}
        bot_token: ${{ secrets.TG_TOKEN }}
      run: curl "https://api.telegram.org/bot${bot_token}/sendDocument?chat_id=${chat_id}" -F document=@"CodeBackup.zip"


    - name: Zip Current Directory
      run: rm CodeBackup.zip
